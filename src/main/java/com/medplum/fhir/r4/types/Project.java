/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import jakarta.json.JsonObject;

import com.medplum.fhir.r4.FhirPropertyNames;

/**
 * Medplum project. A Medplum project is the top-level entity for
 * Medplum. A project is an isolated set of resources.
 */
public class Project extends FhirResource {
    public static final String RESOURCE_TYPE = "Project";

    public static Builder create() {
        return new Builder();
    }

    public static Builder create(final JsonObject data) {
        return new Builder(data);
    }

    public Project(final JsonObject data) {
        super(data);
    }

    /**
     * A name associated with the organization.
     */
    public String name() {
        return getString(FhirPropertyNames.PROPERTY_NAME);
    }

    /**
     * A summary, characterization or explanation of the Project.
     */
    public String description() {
        return getString(FhirPropertyNames.PROPERTY_DESCRIPTION);
    }

    /**
     * Indicates the user with responsibility for managing the Project.
     */
    public Reference owner() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_OWNER);
    }

    public static final class Builder extends FhirResource.Builder<Project, Project.Builder> {

        private Builder() {
            super(RESOURCE_TYPE);
        }

        private Builder(final JsonObject data) {
            super(RESOURCE_TYPE, data);
        }

        public Builder name(final String name) {
            b.add(FhirPropertyNames.PROPERTY_NAME, name);
            return this;
        }

        public Builder description(final String description) {
            b.add(FhirPropertyNames.PROPERTY_DESCRIPTION, description);
            return this;
        }

        public Builder owner(final Reference owner) {
            b.add(FhirPropertyNames.PROPERTY_OWNER, owner);
            return this;
        }

        public Project build() {
            return new Project(b.build());
        }
    }
}
