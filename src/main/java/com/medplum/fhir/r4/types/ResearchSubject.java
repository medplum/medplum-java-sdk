/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import jakarta.json.JsonObject;

import com.medplum.fhir.r4.FhirPropertyNames;

/**
 * A physical entity which is the primary unit of operational and/or
 * administrative interest in a study.
 */
public class ResearchSubject extends DomainResource {
    public static final String RESOURCE_TYPE = "ResearchSubject";

    public static Builder create() {
        return new Builder();
    }

    public static Builder create(final JsonObject data) {
        return new Builder(data);
    }

    public ResearchSubject(final JsonObject data) {
        super(data);
    }

    /**
     * Identifiers assigned to this research subject for a study.
     */
    public java.util.List<Identifier> identifier() {
        return getList(Identifier.class, FhirPropertyNames.PROPERTY_IDENTIFIER);
    }

    /**
     * The current state of the subject.
     */
    public String status() {
        return getString(FhirPropertyNames.PROPERTY_STATUS);
    }

    /**
     * The dates the subject began and ended their participation in the
     * study.
     */
    public Period period() {
        return getObject(Period.class, FhirPropertyNames.PROPERTY_PERIOD);
    }

    /**
     * Reference to the study the subject is participating in.
     */
    public Reference study() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_STUDY);
    }

    /**
     * The record of the person or animal who is involved in the study.
     */
    public Reference individual() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_INDIVIDUAL);
    }

    /**
     * The name of the arm in the study the subject is expected to follow as
     * part of this study.
     */
    public String assignedArm() {
        return getString(FhirPropertyNames.PROPERTY_ASSIGNED_ARM);
    }

    /**
     * The name of the arm in the study the subject actually followed as part
     * of this study.
     */
    public String actualArm() {
        return getString(FhirPropertyNames.PROPERTY_ACTUAL_ARM);
    }

    /**
     * A record of the patient's informed agreement to participate in the
     * study.
     */
    public Reference consent() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_CONSENT);
    }

    public static final class Builder extends DomainResource.Builder<ResearchSubject, ResearchSubject.Builder> {

        private Builder() {
            super(RESOURCE_TYPE);
        }

        private Builder(final JsonObject data) {
            super(RESOURCE_TYPE, data);
        }

        public Builder identifier(final java.util.List<Identifier> identifier) {
            b.add(FhirPropertyNames.PROPERTY_IDENTIFIER, FhirObject.toArray(identifier));
            return this;
        }

        public Builder status(final String status) {
            b.add(FhirPropertyNames.PROPERTY_STATUS, status);
            return this;
        }

        public Builder period(final Period period) {
            b.add(FhirPropertyNames.PROPERTY_PERIOD, period);
            return this;
        }

        public Builder study(final Reference study) {
            b.add(FhirPropertyNames.PROPERTY_STUDY, study);
            return this;
        }

        public Builder individual(final Reference individual) {
            b.add(FhirPropertyNames.PROPERTY_INDIVIDUAL, individual);
            return this;
        }

        public Builder assignedArm(final String assignedArm) {
            b.add(FhirPropertyNames.PROPERTY_ASSIGNED_ARM, assignedArm);
            return this;
        }

        public Builder actualArm(final String actualArm) {
            b.add(FhirPropertyNames.PROPERTY_ACTUAL_ARM, actualArm);
            return this;
        }

        public Builder consent(final Reference consent) {
            b.add(FhirPropertyNames.PROPERTY_CONSENT, consent);
            return this;
        }

        public ResearchSubject build() {
            return new ResearchSubject(b.build());
        }
    }
}
