/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import jakarta.json.JsonObject;

import com.medplum.fhir.r4.FhirPropertyNames;

/**
 * OAuth login.
 */
public class Login extends FhirResource {
    public static final String RESOURCE_TYPE = "Login";

    public static Builder create() {
        return new Builder();
    }

    public static Builder create(final JsonObject data) {
        return new Builder(data);
    }

    public Login(final JsonObject data) {
        super(data);
    }

    /**
     * The client requesting the code.
     */
    public Reference client() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_CLIENT);
    }

    /**
     * The user requesting the code.
     */
    public Reference user() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_USER);
    }

    /**
     * Reference to the user's FHIR identity for this login (patient,
     * practitioner, etc).
     */
    public Reference profile() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_PROFILE);
    }

    /**
     * OAuth scope or scopes.
     */
    public String scope() {
        return getString(FhirPropertyNames.PROPERTY_SCOPE);
    }

    public static final class Builder extends FhirResource.Builder<Login, Login.Builder> {

        private Builder() {
            super(RESOURCE_TYPE);
        }

        private Builder(final JsonObject data) {
            super(RESOURCE_TYPE, data);
        }

        public Builder client(final Reference client) {
            b.add(FhirPropertyNames.PROPERTY_CLIENT, client);
            return this;
        }

        public Builder user(final Reference user) {
            b.add(FhirPropertyNames.PROPERTY_USER, user);
            return this;
        }

        public Builder profile(final Reference profile) {
            b.add(FhirPropertyNames.PROPERTY_PROFILE, profile);
            return this;
        }

        public Builder scope(final String scope) {
            b.add(FhirPropertyNames.PROPERTY_SCOPE, scope);
            return this;
        }

        public Login build() {
            return new Login(b.build());
        }
    }
}
