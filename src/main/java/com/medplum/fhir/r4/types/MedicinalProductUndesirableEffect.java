/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import jakarta.json.JsonObject;

import com.medplum.fhir.r4.FhirPropertyNames;

/**
 * Describe the undesirable effects of the medicinal product.
 */
public class MedicinalProductUndesirableEffect extends DomainResource {
    public static final String RESOURCE_TYPE = "MedicinalProductUndesirableEffect";

    public static Builder create() {
        return new Builder();
    }

    public static Builder create(final JsonObject data) {
        return new Builder(data);
    }

    public MedicinalProductUndesirableEffect(final JsonObject data) {
        super(data);
    }

    /**
     * The medication for which this is an indication.
     */
    public java.util.List<Reference> subject() {
        return getList(Reference.class, FhirPropertyNames.PROPERTY_SUBJECT);
    }

    /**
     * The symptom, condition or undesirable effect.
     */
    public CodeableConcept symptomConditionEffect() {
        return getObject(CodeableConcept.class, FhirPropertyNames.PROPERTY_SYMPTOM_CONDITION_EFFECT);
    }

    /**
     * Classification of the effect.
     */
    public CodeableConcept classification() {
        return getObject(CodeableConcept.class, FhirPropertyNames.PROPERTY_CLASSIFICATION);
    }

    /**
     * The frequency of occurrence of the effect.
     */
    public CodeableConcept frequencyOfOccurrence() {
        return getObject(CodeableConcept.class, FhirPropertyNames.PROPERTY_FREQUENCY_OF_OCCURRENCE);
    }

    /**
     * The population group to which this applies.
     */
    public java.util.List<Population> population() {
        return getList(Population.class, FhirPropertyNames.PROPERTY_POPULATION);
    }

    public static final class Builder extends DomainResource.Builder<MedicinalProductUndesirableEffect, MedicinalProductUndesirableEffect.Builder> {

        private Builder() {
            super(RESOURCE_TYPE);
        }

        private Builder(final JsonObject data) {
            super(RESOURCE_TYPE, data);
        }

        public Builder subject(final java.util.List<Reference> subject) {
            b.add(FhirPropertyNames.PROPERTY_SUBJECT, FhirObject.toArray(subject));
            return this;
        }

        public Builder symptomConditionEffect(final CodeableConcept symptomConditionEffect) {
            b.add(FhirPropertyNames.PROPERTY_SYMPTOM_CONDITION_EFFECT, symptomConditionEffect);
            return this;
        }

        public Builder classification(final CodeableConcept classification) {
            b.add(FhirPropertyNames.PROPERTY_CLASSIFICATION, classification);
            return this;
        }

        public Builder frequencyOfOccurrence(final CodeableConcept frequencyOfOccurrence) {
            b.add(FhirPropertyNames.PROPERTY_FREQUENCY_OF_OCCURRENCE, frequencyOfOccurrence);
            return this;
        }

        public Builder population(final java.util.List<Population> population) {
            b.add(FhirPropertyNames.PROPERTY_POPULATION, FhirObject.toArray(population));
            return this;
        }

        public MedicinalProductUndesirableEffect build() {
            return new MedicinalProductUndesirableEffect(b.build());
        }
    }
}
