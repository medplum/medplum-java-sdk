/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import jakarta.json.JsonObject;

import com.medplum.fhir.r4.FhirPropertyNames;

/**
 * Basic is used for handling concepts not yet defined in FHIR,
 * narrative-only resources that don't map to an existing resource, and
 * custom resources not appropriate for inclusion in the FHIR
 * specification.
 */
public class Basic extends DomainResource {
    public static final String RESOURCE_TYPE = "Basic";

    public static Builder create() {
        return new Builder();
    }

    public static Builder create(final JsonObject data) {
        return new Builder(data);
    }

    public Basic(final JsonObject data) {
        super(data);
    }

    /**
     * Identifier assigned to the resource for business purposes, outside the
     * context of FHIR.
     */
    public java.util.List<Identifier> identifier() {
        return getList(Identifier.class, FhirPropertyNames.PROPERTY_IDENTIFIER);
    }

    /**
     * Identifies the 'type' of resource - equivalent to the resource name
     * for other resources.
     */
    public CodeableConcept code() {
        return getObject(CodeableConcept.class, FhirPropertyNames.PROPERTY_CODE);
    }

    /**
     * Identifies the patient, practitioner, device or any other resource
     * that is the &quot;focus&quot; of this resource.
     */
    public Reference subject() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_SUBJECT);
    }

    /**
     * Identifies when the resource was first created.
     */
    public java.time.LocalDate created() {
        return getLocalDate(FhirPropertyNames.PROPERTY_CREATED);
    }

    /**
     * Indicates who was responsible for creating the resource instance.
     */
    public Reference author() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_AUTHOR);
    }

    public static final class Builder extends DomainResource.Builder<Basic, Basic.Builder> {

        private Builder() {
            super(RESOURCE_TYPE);
        }

        private Builder(final JsonObject data) {
            super(RESOURCE_TYPE, data);
        }

        public Builder identifier(final java.util.List<Identifier> identifier) {
            b.add(FhirPropertyNames.PROPERTY_IDENTIFIER, FhirObject.toArray(identifier));
            return this;
        }

        public Builder code(final CodeableConcept code) {
            b.add(FhirPropertyNames.PROPERTY_CODE, code);
            return this;
        }

        public Builder subject(final Reference subject) {
            b.add(FhirPropertyNames.PROPERTY_SUBJECT, subject);
            return this;
        }

        public Builder created(final java.time.LocalDate created) {
            b.add(FhirPropertyNames.PROPERTY_CREATED, created.toString());
            return this;
        }

        public Builder author(final Reference author) {
            b.add(FhirPropertyNames.PROPERTY_AUTHOR, author);
            return this;
        }

        public Basic build() {
            return new Basic(b.build());
        }
    }
}
