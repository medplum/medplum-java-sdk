/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import jakarta.json.JsonObject;

import com.medplum.fhir.r4.FhirPropertyNames;

/**
 * Optional Extension Element - found in all resources.
 */
public class Extension extends FhirObject {
    public static final String RESOURCE_TYPE = "Extension";

    public static Builder create() {
        return new Builder();
    }

    public static Builder create(final JsonObject data) {
        return new Builder(data);
    }

    public Extension(final JsonObject data) {
        super(data);
    }

    /**
     * Unique id for the element within a resource (for internal references).
     * This may be any string value that does not contain spaces.
     */
    public String id() {
        return getString(FhirPropertyNames.PROPERTY_ID);
    }

    /**
     * May be used to represent additional information that is not part of
     * the basic definition of the element. To make the use of extensions
     * safe and manageable, there is a strict set of governance  applied to
     * the definition and use of extensions. Though any implementer can
     * define an extension, there is a set of requirements that SHALL be met
     * as part of the definition of the extension.
     */
    public java.util.List<Extension> extension() {
        return getList(Extension.class, FhirPropertyNames.PROPERTY_EXTENSION);
    }

    /**
     * Source of the definition for the extension code - a logical name or a
     * URL.
     */
    public java.net.URI url() {
        return getUri(FhirPropertyNames.PROPERTY_URL);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueBase64Binary() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_BASE64_BINARY);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Boolean valueBoolean() {
        return data.getBoolean(FhirPropertyNames.PROPERTY_VALUE_BOOLEAN);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueCanonical() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_CANONICAL);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueCode() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_CODE);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueDate() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_DATE);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueDateTime() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_DATE_TIME);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Integer valueDecimal() {
        return data.getInt(FhirPropertyNames.PROPERTY_VALUE_DECIMAL);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueId() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_ID);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueInstant() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_INSTANT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Integer valueInteger() {
        return data.getInt(FhirPropertyNames.PROPERTY_VALUE_INTEGER);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueMarkdown() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_MARKDOWN);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueOid() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_OID);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Integer valuePositiveInt() {
        return data.getInt(FhirPropertyNames.PROPERTY_VALUE_POSITIVE_INT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueString() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_STRING);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueTime() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_TIME);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Integer valueUnsignedInt() {
        return data.getInt(FhirPropertyNames.PROPERTY_VALUE_UNSIGNED_INT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public java.net.URI valueUri() {
        return getUri(FhirPropertyNames.PROPERTY_VALUE_URI);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public java.net.URI valueUrl() {
        return getUri(FhirPropertyNames.PROPERTY_VALUE_URL);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public String valueUuid() {
        return getString(FhirPropertyNames.PROPERTY_VALUE_UUID);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Address valueAddress() {
        return getObject(Address.class, FhirPropertyNames.PROPERTY_VALUE_ADDRESS);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Age valueAge() {
        return getObject(Age.class, FhirPropertyNames.PROPERTY_VALUE_AGE);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Annotation valueAnnotation() {
        return getObject(Annotation.class, FhirPropertyNames.PROPERTY_VALUE_ANNOTATION);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Attachment valueAttachment() {
        return getObject(Attachment.class, FhirPropertyNames.PROPERTY_VALUE_ATTACHMENT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public CodeableConcept valueCodeableConcept() {
        return getObject(CodeableConcept.class, FhirPropertyNames.PROPERTY_VALUE_CODEABLE_CONCEPT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Coding valueCoding() {
        return getObject(Coding.class, FhirPropertyNames.PROPERTY_VALUE_CODING);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public ContactPoint valueContactPoint() {
        return getObject(ContactPoint.class, FhirPropertyNames.PROPERTY_VALUE_CONTACT_POINT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Count valueCount() {
        return getObject(Count.class, FhirPropertyNames.PROPERTY_VALUE_COUNT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Distance valueDistance() {
        return getObject(Distance.class, FhirPropertyNames.PROPERTY_VALUE_DISTANCE);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Duration valueDuration() {
        return getObject(Duration.class, FhirPropertyNames.PROPERTY_VALUE_DURATION);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public HumanName valueHumanName() {
        return getObject(HumanName.class, FhirPropertyNames.PROPERTY_VALUE_HUMAN_NAME);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Identifier valueIdentifier() {
        return getObject(Identifier.class, FhirPropertyNames.PROPERTY_VALUE_IDENTIFIER);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Money valueMoney() {
        return getObject(Money.class, FhirPropertyNames.PROPERTY_VALUE_MONEY);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Period valuePeriod() {
        return getObject(Period.class, FhirPropertyNames.PROPERTY_VALUE_PERIOD);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Quantity valueQuantity() {
        return getObject(Quantity.class, FhirPropertyNames.PROPERTY_VALUE_QUANTITY);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Range valueRange() {
        return getObject(Range.class, FhirPropertyNames.PROPERTY_VALUE_RANGE);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Ratio valueRatio() {
        return getObject(Ratio.class, FhirPropertyNames.PROPERTY_VALUE_RATIO);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Reference valueReference() {
        return getObject(Reference.class, FhirPropertyNames.PROPERTY_VALUE_REFERENCE);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public SampledData valueSampledData() {
        return getObject(SampledData.class, FhirPropertyNames.PROPERTY_VALUE_SAMPLED_DATA);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Signature valueSignature() {
        return getObject(Signature.class, FhirPropertyNames.PROPERTY_VALUE_SIGNATURE);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Timing valueTiming() {
        return getObject(Timing.class, FhirPropertyNames.PROPERTY_VALUE_TIMING);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public ContactDetail valueContactDetail() {
        return getObject(ContactDetail.class, FhirPropertyNames.PROPERTY_VALUE_CONTACT_DETAIL);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Contributor valueContributor() {
        return getObject(Contributor.class, FhirPropertyNames.PROPERTY_VALUE_CONTRIBUTOR);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public DataRequirement valueDataRequirement() {
        return getObject(DataRequirement.class, FhirPropertyNames.PROPERTY_VALUE_DATA_REQUIREMENT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Expression valueExpression() {
        return getObject(Expression.class, FhirPropertyNames.PROPERTY_VALUE_EXPRESSION);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public ParameterDefinition valueParameterDefinition() {
        return getObject(ParameterDefinition.class, FhirPropertyNames.PROPERTY_VALUE_PARAMETER_DEFINITION);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public RelatedArtifact valueRelatedArtifact() {
        return getObject(RelatedArtifact.class, FhirPropertyNames.PROPERTY_VALUE_RELATED_ARTIFACT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public TriggerDefinition valueTriggerDefinition() {
        return getObject(TriggerDefinition.class, FhirPropertyNames.PROPERTY_VALUE_TRIGGER_DEFINITION);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public UsageContext valueUsageContext() {
        return getObject(UsageContext.class, FhirPropertyNames.PROPERTY_VALUE_USAGE_CONTEXT);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Dosage valueDosage() {
        return getObject(Dosage.class, FhirPropertyNames.PROPERTY_VALUE_DOSAGE);
    }

    /**
     * Value of extension - must be one of a constrained set of the data
     * types (see [Extensibility](extensibility.html) for a list).
     */
    public Meta valueMeta() {
        return getObject(Meta.class, FhirPropertyNames.PROPERTY_VALUE_META);
    }

    public static final class Builder extends FhirObject.Builder<Extension, Extension.Builder> {

        private Builder() {
            super();
        }

        private Builder(final JsonObject data) {
            super(data);
        }

        public Builder id(final String id) {
            b.add(FhirPropertyNames.PROPERTY_ID, id);
            return this;
        }

        public Builder extension(final java.util.List<Extension> extension) {
            b.add(FhirPropertyNames.PROPERTY_EXTENSION, FhirObject.toArray(extension));
            return this;
        }

        public Builder url(final java.net.URI url) {
            b.add(FhirPropertyNames.PROPERTY_URL, url.toString());
            return this;
        }

        public Builder valueBase64Binary(final String valueBase64Binary) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_BASE64_BINARY, valueBase64Binary);
            return this;
        }

        public Builder valueBoolean(final Boolean valueBoolean) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_BOOLEAN, valueBoolean);
            return this;
        }

        public Builder valueCanonical(final String valueCanonical) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_CANONICAL, valueCanonical);
            return this;
        }

        public Builder valueCode(final String valueCode) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_CODE, valueCode);
            return this;
        }

        public Builder valueDate(final String valueDate) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_DATE, valueDate);
            return this;
        }

        public Builder valueDateTime(final String valueDateTime) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_DATE_TIME, valueDateTime);
            return this;
        }

        public Builder valueDecimal(final Integer valueDecimal) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_DECIMAL, valueDecimal);
            return this;
        }

        public Builder valueId(final String valueId) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_ID, valueId);
            return this;
        }

        public Builder valueInstant(final String valueInstant) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_INSTANT, valueInstant);
            return this;
        }

        public Builder valueInteger(final Integer valueInteger) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_INTEGER, valueInteger);
            return this;
        }

        public Builder valueMarkdown(final String valueMarkdown) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_MARKDOWN, valueMarkdown);
            return this;
        }

        public Builder valueOid(final String valueOid) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_OID, valueOid);
            return this;
        }

        public Builder valuePositiveInt(final Integer valuePositiveInt) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_POSITIVE_INT, valuePositiveInt);
            return this;
        }

        public Builder valueString(final String valueString) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_STRING, valueString);
            return this;
        }

        public Builder valueTime(final String valueTime) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_TIME, valueTime);
            return this;
        }

        public Builder valueUnsignedInt(final Integer valueUnsignedInt) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_UNSIGNED_INT, valueUnsignedInt);
            return this;
        }

        public Builder valueUri(final java.net.URI valueUri) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_URI, valueUri.toString());
            return this;
        }

        public Builder valueUrl(final java.net.URI valueUrl) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_URL, valueUrl.toString());
            return this;
        }

        public Builder valueUuid(final String valueUuid) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_UUID, valueUuid);
            return this;
        }

        public Builder valueAddress(final Address valueAddress) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_ADDRESS, valueAddress);
            return this;
        }

        public Builder valueAge(final Age valueAge) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_AGE, valueAge);
            return this;
        }

        public Builder valueAnnotation(final Annotation valueAnnotation) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_ANNOTATION, valueAnnotation);
            return this;
        }

        public Builder valueAttachment(final Attachment valueAttachment) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_ATTACHMENT, valueAttachment);
            return this;
        }

        public Builder valueCodeableConcept(final CodeableConcept valueCodeableConcept) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_CODEABLE_CONCEPT, valueCodeableConcept);
            return this;
        }

        public Builder valueCoding(final Coding valueCoding) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_CODING, valueCoding);
            return this;
        }

        public Builder valueContactPoint(final ContactPoint valueContactPoint) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_CONTACT_POINT, valueContactPoint);
            return this;
        }

        public Builder valueCount(final Count valueCount) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_COUNT, valueCount);
            return this;
        }

        public Builder valueDistance(final Distance valueDistance) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_DISTANCE, valueDistance);
            return this;
        }

        public Builder valueDuration(final Duration valueDuration) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_DURATION, valueDuration);
            return this;
        }

        public Builder valueHumanName(final HumanName valueHumanName) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_HUMAN_NAME, valueHumanName);
            return this;
        }

        public Builder valueIdentifier(final Identifier valueIdentifier) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_IDENTIFIER, valueIdentifier);
            return this;
        }

        public Builder valueMoney(final Money valueMoney) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_MONEY, valueMoney);
            return this;
        }

        public Builder valuePeriod(final Period valuePeriod) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_PERIOD, valuePeriod);
            return this;
        }

        public Builder valueQuantity(final Quantity valueQuantity) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_QUANTITY, valueQuantity);
            return this;
        }

        public Builder valueRange(final Range valueRange) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_RANGE, valueRange);
            return this;
        }

        public Builder valueRatio(final Ratio valueRatio) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_RATIO, valueRatio);
            return this;
        }

        public Builder valueReference(final Reference valueReference) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_REFERENCE, valueReference);
            return this;
        }

        public Builder valueSampledData(final SampledData valueSampledData) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_SAMPLED_DATA, valueSampledData);
            return this;
        }

        public Builder valueSignature(final Signature valueSignature) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_SIGNATURE, valueSignature);
            return this;
        }

        public Builder valueTiming(final Timing valueTiming) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_TIMING, valueTiming);
            return this;
        }

        public Builder valueContactDetail(final ContactDetail valueContactDetail) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_CONTACT_DETAIL, valueContactDetail);
            return this;
        }

        public Builder valueContributor(final Contributor valueContributor) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_CONTRIBUTOR, valueContributor);
            return this;
        }

        public Builder valueDataRequirement(final DataRequirement valueDataRequirement) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_DATA_REQUIREMENT, valueDataRequirement);
            return this;
        }

        public Builder valueExpression(final Expression valueExpression) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_EXPRESSION, valueExpression);
            return this;
        }

        public Builder valueParameterDefinition(final ParameterDefinition valueParameterDefinition) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_PARAMETER_DEFINITION, valueParameterDefinition);
            return this;
        }

        public Builder valueRelatedArtifact(final RelatedArtifact valueRelatedArtifact) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_RELATED_ARTIFACT, valueRelatedArtifact);
            return this;
        }

        public Builder valueTriggerDefinition(final TriggerDefinition valueTriggerDefinition) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_TRIGGER_DEFINITION, valueTriggerDefinition);
            return this;
        }

        public Builder valueUsageContext(final UsageContext valueUsageContext) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_USAGE_CONTEXT, valueUsageContext);
            return this;
        }

        public Builder valueDosage(final Dosage valueDosage) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_DOSAGE, valueDosage);
            return this;
        }

        public Builder valueMeta(final Meta valueMeta) {
            b.add(FhirPropertyNames.PROPERTY_VALUE_META, valueMeta);
            return this;
        }

        public Extension build() {
            return new Extension(b.build());
        }
    }
}
