/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class OrganizationContactTest {

    @Test
    public void testConstructor() {
        assertNotNull(new Organization.OrganizationContact(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(Organization.OrganizationContact.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final Organization.OrganizationContact x = Organization.OrganizationContact.create().build();
        final Organization.OrganizationContact y = Organization.OrganizationContact.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", Organization.OrganizationContact.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Organization.OrganizationContact.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Organization.OrganizationContact.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testPurpose() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, Organization.OrganizationContact.create().purpose(value).build().purpose());
    }

    @Test
    public void testName() {
        final HumanName value = HumanName.create().build();
        assertEquals(value, Organization.OrganizationContact.create().name(value).build().name());
    }

    @Test
    public void testTelecom() {
        final java.util.List<ContactPoint> value = java.util.Collections.emptyList();
        assertEquals(value, Organization.OrganizationContact.create().telecom(value).build().telecom());
    }

    @Test
    public void testAddress() {
        final Address value = Address.create().build();
        assertEquals(value, Organization.OrganizationContact.create().address(value).build().address());
    }
}
