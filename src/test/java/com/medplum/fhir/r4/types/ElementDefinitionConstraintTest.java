/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class ElementDefinitionConstraintTest {

    @Test
    public void testConstructor() {
        assertNotNull(new ElementDefinition.ElementDefinitionConstraint(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(ElementDefinition.ElementDefinitionConstraint.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final ElementDefinition.ElementDefinitionConstraint x = ElementDefinition.ElementDefinitionConstraint.create().build();
        final ElementDefinition.ElementDefinitionConstraint y = ElementDefinition.ElementDefinitionConstraint.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", ElementDefinition.ElementDefinitionConstraint.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, ElementDefinition.ElementDefinitionConstraint.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, ElementDefinition.ElementDefinitionConstraint.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testKey() {
        assertEquals("x", ElementDefinition.ElementDefinitionConstraint.create().key("x").build().key());
    }

    @Test
    public void testRequirements() {
        assertEquals("x", ElementDefinition.ElementDefinitionConstraint.create().requirements("x").build().requirements());
    }

    @Test
    public void testSeverity() {
        assertEquals("x", ElementDefinition.ElementDefinitionConstraint.create().severity("x").build().severity());
    }

    @Test
    public void testHuman() {
        assertEquals("x", ElementDefinition.ElementDefinitionConstraint.create().human("x").build().human());
    }

    @Test
    public void testExpression() {
        assertEquals("x", ElementDefinition.ElementDefinitionConstraint.create().expression("x").build().expression());
    }

    @Test
    public void testXpath() {
        assertEquals("x", ElementDefinition.ElementDefinitionConstraint.create().xpath("x").build().xpath());
    }

    @Test
    public void testSource() {
        assertEquals("x", ElementDefinition.ElementDefinitionConstraint.create().source("x").build().source());
    }
}
