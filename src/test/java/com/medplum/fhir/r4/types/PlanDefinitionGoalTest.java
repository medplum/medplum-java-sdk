/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class PlanDefinitionGoalTest {

    @Test
    public void testConstructor() {
        assertNotNull(new PlanDefinition.PlanDefinitionGoal(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(PlanDefinition.PlanDefinitionGoal.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final PlanDefinition.PlanDefinitionGoal x = PlanDefinition.PlanDefinitionGoal.create().build();
        final PlanDefinition.PlanDefinitionGoal y = PlanDefinition.PlanDefinitionGoal.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", PlanDefinition.PlanDefinitionGoal.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, PlanDefinition.PlanDefinitionGoal.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, PlanDefinition.PlanDefinitionGoal.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testCategory() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, PlanDefinition.PlanDefinitionGoal.create().category(value).build().category());
    }

    @Test
    public void testDescription() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, PlanDefinition.PlanDefinitionGoal.create().description(value).build().description());
    }

    @Test
    public void testPriority() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, PlanDefinition.PlanDefinitionGoal.create().priority(value).build().priority());
    }

    @Test
    public void testStart() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, PlanDefinition.PlanDefinitionGoal.create().start(value).build().start());
    }

    @Test
    public void testAddresses() {
        final java.util.List<CodeableConcept> value = java.util.Collections.emptyList();
        assertEquals(value, PlanDefinition.PlanDefinitionGoal.create().addresses(value).build().addresses());
    }

    @Test
    public void testDocumentation() {
        final java.util.List<RelatedArtifact> value = java.util.Collections.emptyList();
        assertEquals(value, PlanDefinition.PlanDefinitionGoal.create().documentation(value).build().documentation());
    }

    @Test
    public void testTarget() {
        final java.util.List<PlanDefinition.PlanDefinitionTarget> value = java.util.Collections.emptyList();
        assertEquals(value, PlanDefinition.PlanDefinitionGoal.create().target(value).build().target());
    }
}
