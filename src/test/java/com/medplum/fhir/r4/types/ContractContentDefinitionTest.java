/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class ContractContentDefinitionTest {

    @Test
    public void testConstructor() {
        assertNotNull(new Contract.ContractContentDefinition(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(Contract.ContractContentDefinition.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final Contract.ContractContentDefinition x = Contract.ContractContentDefinition.create().build();
        final Contract.ContractContentDefinition y = Contract.ContractContentDefinition.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", Contract.ContractContentDefinition.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Contract.ContractContentDefinition.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Contract.ContractContentDefinition.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testType() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, Contract.ContractContentDefinition.create().type(value).build().type());
    }

    @Test
    public void testSubType() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, Contract.ContractContentDefinition.create().subType(value).build().subType());
    }

    @Test
    public void testPublisher() {
        final Reference value = Reference.create().build();
        assertEquals(value, Contract.ContractContentDefinition.create().publisher(value).build().publisher());
    }

    @Test
    public void testPublicationDate() {
        final java.time.Instant value = java.time.Instant.now();
        assertEquals(value, Contract.ContractContentDefinition.create().publicationDate(value).build().publicationDate());
    }

    @Test
    public void testPublicationStatus() {
        assertEquals("x", Contract.ContractContentDefinition.create().publicationStatus("x").build().publicationStatus());
    }

    @Test
    public void testCopyright() {
        assertEquals("x", Contract.ContractContentDefinition.create().copyright("x").build().copyright());
    }
}
