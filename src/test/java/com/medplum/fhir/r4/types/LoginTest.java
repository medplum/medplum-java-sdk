/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class LoginTest {

    @Test
    public void testConstructor() {
        assertNotNull(new Login(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(Login.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final Login x = Login.create().build();
        final Login y = Login.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", Login.create().id("x").build().id());
    }

    @Test
    public void testMeta() {
        final Meta value = Meta.create().build();
        assertEquals(value, Login.create().meta(value).build().meta());
    }

    @Test
    public void testImplicitRules() {
        final java.net.URI value = java.net.URI.create("https://www.example.com");
        assertEquals(value, Login.create().implicitRules(value).build().implicitRules());
    }

    @Test
    public void testLanguage() {
        assertEquals("x", Login.create().language("x").build().language());
    }

    @Test
    public void testClient() {
        final Reference value = Reference.create().build();
        assertEquals(value, Login.create().client(value).build().client());
    }

    @Test
    public void testUser() {
        final Reference value = Reference.create().build();
        assertEquals(value, Login.create().user(value).build().user());
    }

    @Test
    public void testProfile() {
        final Reference value = Reference.create().build();
        assertEquals(value, Login.create().profile(value).build().profile());
    }

    @Test
    public void testScope() {
        assertEquals("x", Login.create().scope("x").build().scope());
    }
}
