/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class MolecularSequenceInnerTest {

    @Test
    public void testConstructor() {
        assertNotNull(new MolecularSequence.MolecularSequenceInner(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(MolecularSequence.MolecularSequenceInner.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final MolecularSequence.MolecularSequenceInner x = MolecularSequence.MolecularSequenceInner.create().build();
        final MolecularSequence.MolecularSequenceInner y = MolecularSequence.MolecularSequenceInner.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", MolecularSequence.MolecularSequenceInner.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, MolecularSequence.MolecularSequenceInner.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, MolecularSequence.MolecularSequenceInner.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testStart() {
        assertEquals(1, MolecularSequence.MolecularSequenceInner.create().start(1).build().start());
    }

    @Test
    public void testEnd() {
        assertEquals(1, MolecularSequence.MolecularSequenceInner.create().end(1).build().end());
    }
}
