/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class ContactPointTest {

    @Test
    public void testConstructor() {
        assertNotNull(new ContactPoint(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(ContactPoint.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final ContactPoint x = ContactPoint.create().build();
        final ContactPoint y = ContactPoint.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", ContactPoint.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, ContactPoint.create().extension(value).build().extension());
    }

    @Test
    public void testSystem() {
        assertEquals("x", ContactPoint.create().system("x").build().system());
    }

    @Test
    public void testValue() {
        assertEquals("x", ContactPoint.create().value("x").build().value());
    }

    @Test
    public void testUse() {
        assertEquals("x", ContactPoint.create().use("x").build().use());
    }

    @Test
    public void testRank() {
        assertEquals(1, ContactPoint.create().rank(1).build().rank());
    }

    @Test
    public void testPeriod() {
        final Period value = Period.create().build();
        assertEquals(value, ContactPoint.create().period(value).build().period());
    }
}
