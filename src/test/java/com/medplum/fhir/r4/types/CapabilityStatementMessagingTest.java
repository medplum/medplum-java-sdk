/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class CapabilityStatementMessagingTest {

    @Test
    public void testConstructor() {
        assertNotNull(new CapabilityStatement.CapabilityStatementMessaging(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(CapabilityStatement.CapabilityStatementMessaging.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final CapabilityStatement.CapabilityStatementMessaging x = CapabilityStatement.CapabilityStatementMessaging.create().build();
        final CapabilityStatement.CapabilityStatementMessaging y = CapabilityStatement.CapabilityStatementMessaging.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", CapabilityStatement.CapabilityStatementMessaging.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, CapabilityStatement.CapabilityStatementMessaging.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, CapabilityStatement.CapabilityStatementMessaging.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testEndpoint() {
        final java.util.List<CapabilityStatement.CapabilityStatementEndpoint> value = java.util.Collections.emptyList();
        assertEquals(value, CapabilityStatement.CapabilityStatementMessaging.create().endpoint(value).build().endpoint());
    }

    @Test
    public void testReliableCache() {
        assertEquals(1, CapabilityStatement.CapabilityStatementMessaging.create().reliableCache(1).build().reliableCache());
    }

    @Test
    public void testDocumentation() {
        assertEquals("x", CapabilityStatement.CapabilityStatementMessaging.create().documentation("x").build().documentation());
    }

    @Test
    public void testSupportedMessage() {
        final java.util.List<CapabilityStatement.CapabilityStatementSupportedMessage> value = java.util.Collections.emptyList();
        assertEquals(value, CapabilityStatement.CapabilityStatementMessaging.create().supportedMessage(value).build().supportedMessage());
    }
}
