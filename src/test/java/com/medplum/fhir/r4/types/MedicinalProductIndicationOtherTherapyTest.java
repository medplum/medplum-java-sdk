/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class MedicinalProductIndicationOtherTherapyTest {

    @Test
    public void testConstructor() {
        assertNotNull(new MedicinalProductIndication.MedicinalProductIndicationOtherTherapy(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(MedicinalProductIndication.MedicinalProductIndicationOtherTherapy.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
    final MedicinalProductIndication.MedicinalProductIndicationOtherTherapy x =
            MedicinalProductIndication.MedicinalProductIndicationOtherTherapy.create().build();
    final MedicinalProductIndication.MedicinalProductIndicationOtherTherapy y =
            MedicinalProductIndication.MedicinalProductIndicationOtherTherapy.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", MedicinalProductIndication.MedicinalProductIndicationOtherTherapy.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, MedicinalProductIndication.MedicinalProductIndicationOtherTherapy.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, MedicinalProductIndication.MedicinalProductIndicationOtherTherapy.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testTherapyRelationshipType() {
        final CodeableConcept value = CodeableConcept.create().build();
    assertEquals(value,
            MedicinalProductIndication.MedicinalProductIndicationOtherTherapy.create().therapyRelationshipType(value).build().therapyRelationshipType());
    }

    @Test
    public void testMedicationCodeableConcept() {
        final CodeableConcept value = CodeableConcept.create().build();
    assertEquals(value,
            MedicinalProductIndication.MedicinalProductIndicationOtherTherapy.create().medicationCodeableConcept(value).build().medicationCodeableConcept());
    }

    @Test
    public void testMedicationReference() {
        final Reference value = Reference.create().build();
    assertEquals(value,
            MedicinalProductIndication.MedicinalProductIndicationOtherTherapy.create().medicationReference(value).build().medicationReference());
    }
}
