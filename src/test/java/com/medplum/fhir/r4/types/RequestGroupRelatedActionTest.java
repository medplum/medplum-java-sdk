/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class RequestGroupRelatedActionTest {

    @Test
    public void testConstructor() {
        assertNotNull(new RequestGroup.RequestGroupRelatedAction(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(RequestGroup.RequestGroupRelatedAction.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final RequestGroup.RequestGroupRelatedAction x = RequestGroup.RequestGroupRelatedAction.create().build();
        final RequestGroup.RequestGroupRelatedAction y = RequestGroup.RequestGroupRelatedAction.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", RequestGroup.RequestGroupRelatedAction.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, RequestGroup.RequestGroupRelatedAction.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, RequestGroup.RequestGroupRelatedAction.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testActionId() {
        assertEquals("x", RequestGroup.RequestGroupRelatedAction.create().actionId("x").build().actionId());
    }

    @Test
    public void testRelationship() {
        assertEquals("x", RequestGroup.RequestGroupRelatedAction.create().relationship("x").build().relationship());
    }

    @Test
    public void testOffsetDuration() {
        final Duration value = Duration.create().build();
        assertEquals(value, RequestGroup.RequestGroupRelatedAction.create().offsetDuration(value).build().offsetDuration());
    }

    @Test
    public void testOffsetRange() {
        final Range value = Range.create().build();
        assertEquals(value, RequestGroup.RequestGroupRelatedAction.create().offsetRange(value).build().offsetRange());
    }
}
