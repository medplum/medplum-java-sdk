/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class TestScriptCapabilityTest {

    @Test
    public void testConstructor() {
        assertNotNull(new TestScript.TestScriptCapability(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(TestScript.TestScriptCapability.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final TestScript.TestScriptCapability x = TestScript.TestScriptCapability.create().build();
        final TestScript.TestScriptCapability y = TestScript.TestScriptCapability.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", TestScript.TestScriptCapability.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, TestScript.TestScriptCapability.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, TestScript.TestScriptCapability.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testRequired() {
        assertEquals(true, TestScript.TestScriptCapability.create().required(true).build().required());
    }

    @Test
    public void testValidated() {
        assertEquals(true, TestScript.TestScriptCapability.create().validated(true).build().validated());
    }

    @Test
    public void testDescription() {
        assertEquals("x", TestScript.TestScriptCapability.create().description("x").build().description());
    }

    @Test
    public void testOrigin() {
        final java.util.List<Integer> value = java.util.Collections.emptyList();
        assertEquals(value, TestScript.TestScriptCapability.create().origin(value).build().origin());
    }

    @Test
    public void testDestination() {
        assertEquals(1, TestScript.TestScriptCapability.create().destination(1).build().destination());
    }

    @Test
    public void testLink() {
        final java.util.List<java.net.URI> value = java.util.Collections.emptyList();
        assertEquals(value, TestScript.TestScriptCapability.create().link(value).build().link());
    }

    @Test
    public void testCapabilities() {
        assertEquals("x", TestScript.TestScriptCapability.create().capabilities("x").build().capabilities());
    }
}
