/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class QuestionnaireAnswerOptionTest {

    @Test
    public void testConstructor() {
        assertNotNull(new Questionnaire.QuestionnaireAnswerOption(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(Questionnaire.QuestionnaireAnswerOption.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final Questionnaire.QuestionnaireAnswerOption x = Questionnaire.QuestionnaireAnswerOption.create().build();
        final Questionnaire.QuestionnaireAnswerOption y = Questionnaire.QuestionnaireAnswerOption.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", Questionnaire.QuestionnaireAnswerOption.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Questionnaire.QuestionnaireAnswerOption.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Questionnaire.QuestionnaireAnswerOption.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testValueInteger() {
        assertEquals(1, Questionnaire.QuestionnaireAnswerOption.create().valueInteger(1).build().valueInteger());
    }

    @Test
    public void testValueDate() {
        assertEquals("x", Questionnaire.QuestionnaireAnswerOption.create().valueDate("x").build().valueDate());
    }

    @Test
    public void testValueTime() {
        assertEquals("x", Questionnaire.QuestionnaireAnswerOption.create().valueTime("x").build().valueTime());
    }

    @Test
    public void testValueString() {
        assertEquals("x", Questionnaire.QuestionnaireAnswerOption.create().valueString("x").build().valueString());
    }

    @Test
    public void testValueCoding() {
        final Coding value = Coding.create().build();
        assertEquals(value, Questionnaire.QuestionnaireAnswerOption.create().valueCoding(value).build().valueCoding());
    }

    @Test
    public void testValueReference() {
        final Reference value = Reference.create().build();
        assertEquals(value, Questionnaire.QuestionnaireAnswerOption.create().valueReference(value).build().valueReference());
    }

    @Test
    public void testInitialSelected() {
        assertEquals(true, Questionnaire.QuestionnaireAnswerOption.create().initialSelected(true).build().initialSelected());
    }
}
