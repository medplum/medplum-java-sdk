/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class RelatedArtifactTest {

    @Test
    public void testConstructor() {
        assertNotNull(new RelatedArtifact(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(RelatedArtifact.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final RelatedArtifact x = RelatedArtifact.create().build();
        final RelatedArtifact y = RelatedArtifact.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", RelatedArtifact.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, RelatedArtifact.create().extension(value).build().extension());
    }

    @Test
    public void testType() {
        assertEquals("x", RelatedArtifact.create().type("x").build().type());
    }

    @Test
    public void testLabel() {
        assertEquals("x", RelatedArtifact.create().label("x").build().label());
    }

    @Test
    public void testDisplay() {
        assertEquals("x", RelatedArtifact.create().display("x").build().display());
    }

    @Test
    public void testCitation() {
        assertEquals("x", RelatedArtifact.create().citation("x").build().citation());
    }

    @Test
    public void testUrl() {
        final java.net.URI value = java.net.URI.create("https://www.example.com");
        assertEquals(value, RelatedArtifact.create().url(value).build().url());
    }

    @Test
    public void testDocument() {
        final Attachment value = Attachment.create().build();
        assertEquals(value, RelatedArtifact.create().document(value).build().document());
    }

    @Test
    public void testResource() {
        assertEquals("x", RelatedArtifact.create().resource("x").build().resource());
    }
}
