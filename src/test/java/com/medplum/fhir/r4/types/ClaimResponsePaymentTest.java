/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class ClaimResponsePaymentTest {

    @Test
    public void testConstructor() {
        assertNotNull(new ClaimResponse.ClaimResponsePayment(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(ClaimResponse.ClaimResponsePayment.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final ClaimResponse.ClaimResponsePayment x = ClaimResponse.ClaimResponsePayment.create().build();
        final ClaimResponse.ClaimResponsePayment y = ClaimResponse.ClaimResponsePayment.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", ClaimResponse.ClaimResponsePayment.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, ClaimResponse.ClaimResponsePayment.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, ClaimResponse.ClaimResponsePayment.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testType() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, ClaimResponse.ClaimResponsePayment.create().type(value).build().type());
    }

    @Test
    public void testAdjustment() {
        final Money value = Money.create().build();
        assertEquals(value, ClaimResponse.ClaimResponsePayment.create().adjustment(value).build().adjustment());
    }

    @Test
    public void testAdjustmentReason() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, ClaimResponse.ClaimResponsePayment.create().adjustmentReason(value).build().adjustmentReason());
    }

    @Test
    public void testDate() {
        final java.time.LocalDate value = java.time.LocalDate.now();
        assertEquals(value, ClaimResponse.ClaimResponsePayment.create().date(value).build().date());
    }

    @Test
    public void testAmount() {
        final Money value = Money.create().build();
        assertEquals(value, ClaimResponse.ClaimResponsePayment.create().amount(value).build().amount());
    }

    @Test
    public void testIdentifier() {
        final Identifier value = Identifier.create().build();
        assertEquals(value, ClaimResponse.ClaimResponsePayment.create().identifier(value).build().identifier());
    }
}
