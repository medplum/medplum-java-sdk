/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class SubstancePolymerMonomerSetTest {

    @Test
    public void testConstructor() {
        assertNotNull(new SubstancePolymer.SubstancePolymerMonomerSet(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(SubstancePolymer.SubstancePolymerMonomerSet.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final SubstancePolymer.SubstancePolymerMonomerSet x = SubstancePolymer.SubstancePolymerMonomerSet.create().build();
        final SubstancePolymer.SubstancePolymerMonomerSet y = SubstancePolymer.SubstancePolymerMonomerSet.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", SubstancePolymer.SubstancePolymerMonomerSet.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, SubstancePolymer.SubstancePolymerMonomerSet.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, SubstancePolymer.SubstancePolymerMonomerSet.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testRatioType() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, SubstancePolymer.SubstancePolymerMonomerSet.create().ratioType(value).build().ratioType());
    }

    @Test
    public void testStartingMaterial() {
        final java.util.List<SubstancePolymer.SubstancePolymerStartingMaterial> value = java.util.Collections.emptyList();
        assertEquals(value, SubstancePolymer.SubstancePolymerMonomerSet.create().startingMaterial(value).build().startingMaterial());
    }
}
