/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class ValueSetExpansionTest {

    @Test
    public void testConstructor() {
        assertNotNull(new ValueSet.ValueSetExpansion(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(ValueSet.ValueSetExpansion.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final ValueSet.ValueSetExpansion x = ValueSet.ValueSetExpansion.create().build();
        final ValueSet.ValueSetExpansion y = ValueSet.ValueSetExpansion.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", ValueSet.ValueSetExpansion.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, ValueSet.ValueSetExpansion.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, ValueSet.ValueSetExpansion.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testIdentifier() {
        final java.net.URI value = java.net.URI.create("https://www.example.com");
        assertEquals(value, ValueSet.ValueSetExpansion.create().identifier(value).build().identifier());
    }

    @Test
    public void testTimestamp() {
        final java.time.Instant value = java.time.Instant.now();
        assertEquals(value, ValueSet.ValueSetExpansion.create().timestamp(value).build().timestamp());
    }

    @Test
    public void testTotal() {
        assertEquals(1, ValueSet.ValueSetExpansion.create().total(1).build().total());
    }

    @Test
    public void testOffset() {
        assertEquals(1, ValueSet.ValueSetExpansion.create().offset(1).build().offset());
    }

    @Test
    public void testParameter() {
        final java.util.List<ValueSet.ValueSetParameter> value = java.util.Collections.emptyList();
        assertEquals(value, ValueSet.ValueSetExpansion.create().parameter(value).build().parameter());
    }

    @Test
    public void testContains() {
        final java.util.List<ValueSet.ValueSetContains> value = java.util.Collections.emptyList();
        assertEquals(value, ValueSet.ValueSetExpansion.create().contains(value).build().contains());
    }
}
