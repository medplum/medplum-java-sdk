/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class CodeSystemConceptTest {

    @Test
    public void testConstructor() {
        assertNotNull(new CodeSystem.CodeSystemConcept(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(CodeSystem.CodeSystemConcept.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final CodeSystem.CodeSystemConcept x = CodeSystem.CodeSystemConcept.create().build();
        final CodeSystem.CodeSystemConcept y = CodeSystem.CodeSystemConcept.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", CodeSystem.CodeSystemConcept.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, CodeSystem.CodeSystemConcept.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, CodeSystem.CodeSystemConcept.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testCode() {
        assertEquals("x", CodeSystem.CodeSystemConcept.create().code("x").build().code());
    }

    @Test
    public void testDisplay() {
        assertEquals("x", CodeSystem.CodeSystemConcept.create().display("x").build().display());
    }

    @Test
    public void testDefinition() {
        assertEquals("x", CodeSystem.CodeSystemConcept.create().definition("x").build().definition());
    }

    @Test
    public void testDesignation() {
        final java.util.List<CodeSystem.CodeSystemDesignation> value = java.util.Collections.emptyList();
        assertEquals(value, CodeSystem.CodeSystemConcept.create().designation(value).build().designation());
    }

    @Test
    public void testProperty() {
        final java.util.List<CodeSystem.CodeSystemProperty1> value = java.util.Collections.emptyList();
        assertEquals(value, CodeSystem.CodeSystemConcept.create().property(value).build().property());
    }

    @Test
    public void testConcept() {
        final java.util.List<CodeSystem.CodeSystemConcept> value = java.util.Collections.emptyList();
        assertEquals(value, CodeSystem.CodeSystemConcept.create().concept(value).build().concept());
    }
}
