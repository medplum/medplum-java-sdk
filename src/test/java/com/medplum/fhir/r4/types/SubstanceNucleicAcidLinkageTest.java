/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class SubstanceNucleicAcidLinkageTest {

    @Test
    public void testConstructor() {
        assertNotNull(new SubstanceNucleicAcid.SubstanceNucleicAcidLinkage(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final SubstanceNucleicAcid.SubstanceNucleicAcidLinkage x = SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create().build();
        final SubstanceNucleicAcid.SubstanceNucleicAcidLinkage y = SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testConnectivity() {
        assertEquals("x", SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create().connectivity("x").build().connectivity());
    }

    @Test
    public void testIdentifier() {
        final Identifier value = Identifier.create().build();
        assertEquals(value, SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create().identifier(value).build().identifier());
    }

    @Test
    public void testName() {
        assertEquals("x", SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create().name("x").build().name());
    }

    @Test
    public void testResidueSite() {
        assertEquals("x", SubstanceNucleicAcid.SubstanceNucleicAcidLinkage.create().residueSite("x").build().residueSite());
    }
}
