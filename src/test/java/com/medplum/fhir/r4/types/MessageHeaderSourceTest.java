/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class MessageHeaderSourceTest {

    @Test
    public void testConstructor() {
        assertNotNull(new MessageHeader.MessageHeaderSource(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(MessageHeader.MessageHeaderSource.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final MessageHeader.MessageHeaderSource x = MessageHeader.MessageHeaderSource.create().build();
        final MessageHeader.MessageHeaderSource y = MessageHeader.MessageHeaderSource.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", MessageHeader.MessageHeaderSource.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, MessageHeader.MessageHeaderSource.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, MessageHeader.MessageHeaderSource.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testName() {
        assertEquals("x", MessageHeader.MessageHeaderSource.create().name("x").build().name());
    }

    @Test
    public void testSoftware() {
        assertEquals("x", MessageHeader.MessageHeaderSource.create().software("x").build().software());
    }

    @Test
    public void testVersion() {
        assertEquals("x", MessageHeader.MessageHeaderSource.create().version("x").build().version());
    }

    @Test
    public void testContact() {
        final ContactPoint value = ContactPoint.create().build();
        assertEquals(value, MessageHeader.MessageHeaderSource.create().contact(value).build().contact());
    }

    @Test
    public void testEndpoint() {
        final java.net.URI value = java.net.URI.create("https://www.example.com");
        assertEquals(value, MessageHeader.MessageHeaderSource.create().endpoint(value).build().endpoint());
    }
}
