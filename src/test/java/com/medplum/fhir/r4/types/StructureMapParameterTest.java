/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class StructureMapParameterTest {

    @Test
    public void testConstructor() {
        assertNotNull(new StructureMap.StructureMapParameter(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(StructureMap.StructureMapParameter.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final StructureMap.StructureMapParameter x = StructureMap.StructureMapParameter.create().build();
        final StructureMap.StructureMapParameter y = StructureMap.StructureMapParameter.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", StructureMap.StructureMapParameter.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, StructureMap.StructureMapParameter.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, StructureMap.StructureMapParameter.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testValueId() {
        assertEquals("x", StructureMap.StructureMapParameter.create().valueId("x").build().valueId());
    }

    @Test
    public void testValueString() {
        assertEquals("x", StructureMap.StructureMapParameter.create().valueString("x").build().valueString());
    }

    @Test
    public void testValueBoolean() {
        assertEquals(true, StructureMap.StructureMapParameter.create().valueBoolean(true).build().valueBoolean());
    }

    @Test
    public void testValueInteger() {
        assertEquals(1, StructureMap.StructureMapParameter.create().valueInteger(1).build().valueInteger());
    }

    @Test
    public void testValueDecimal() {
        assertEquals(1, StructureMap.StructureMapParameter.create().valueDecimal(1).build().valueDecimal());
    }
}
