/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class CoverageEligibilityRequestSupportingInfoTest {

    @Test
    public void testConstructor() {
        assertNotNull(new CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
    final CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo x =
            CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo.create().build();
    final CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo y =
            CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testSequence() {
        assertEquals(1, CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo.create().sequence(1).build().sequence());
    }

    @Test
    public void testInformation() {
        final Reference value = Reference.create().build();
        assertEquals(value, CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo.create().information(value).build().information());
    }

    @Test
    public void testAppliesToAll() {
        assertEquals(true, CoverageEligibilityRequest.CoverageEligibilityRequestSupportingInfo.create().appliesToAll(true).build().appliesToAll());
    }
}
