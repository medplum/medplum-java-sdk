/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class ParametersTest {

    @Test
    public void testConstructor() {
        assertNotNull(new Parameters(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(Parameters.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final Parameters x = Parameters.create().build();
        final Parameters y = Parameters.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", Parameters.create().id("x").build().id());
    }

    @Test
    public void testMeta() {
        final Meta value = Meta.create().build();
        assertEquals(value, Parameters.create().meta(value).build().meta());
    }

    @Test
    public void testImplicitRules() {
        final java.net.URI value = java.net.URI.create("https://www.example.com");
        assertEquals(value, Parameters.create().implicitRules(value).build().implicitRules());
    }

    @Test
    public void testLanguage() {
        assertEquals("x", Parameters.create().language("x").build().language());
    }

    @Test
    public void testParameter() {
        final java.util.List<Parameters.ParametersParameter> value = java.util.Collections.emptyList();
        assertEquals(value, Parameters.create().parameter(value).build().parameter());
    }
}
