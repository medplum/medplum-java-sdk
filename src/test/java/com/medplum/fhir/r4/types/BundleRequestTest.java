/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class BundleRequestTest {

    @Test
    public void testConstructor() {
        assertNotNull(new Bundle.BundleRequest(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(Bundle.BundleRequest.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final Bundle.BundleRequest x = Bundle.BundleRequest.create().build();
        final Bundle.BundleRequest y = Bundle.BundleRequest.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", Bundle.BundleRequest.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Bundle.BundleRequest.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Bundle.BundleRequest.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testMethod() {
        assertEquals("x", Bundle.BundleRequest.create().method("x").build().method());
    }

    @Test
    public void testUrl() {
        final java.net.URI value = java.net.URI.create("https://www.example.com");
        assertEquals(value, Bundle.BundleRequest.create().url(value).build().url());
    }

    @Test
    public void testIfNoneMatch() {
        assertEquals("x", Bundle.BundleRequest.create().ifNoneMatch("x").build().ifNoneMatch());
    }

    @Test
    public void testIfModifiedSince() {
        final java.time.Instant value = java.time.Instant.now();
        assertEquals(value, Bundle.BundleRequest.create().ifModifiedSince(value).build().ifModifiedSince());
    }

    @Test
    public void testIfMatch() {
        assertEquals("x", Bundle.BundleRequest.create().ifMatch("x").build().ifMatch());
    }

    @Test
    public void testIfNoneExist() {
        assertEquals("x", Bundle.BundleRequest.create().ifNoneExist("x").build().ifNoneExist());
    }
}
