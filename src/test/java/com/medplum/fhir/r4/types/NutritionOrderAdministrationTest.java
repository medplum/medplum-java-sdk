/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class NutritionOrderAdministrationTest {

    @Test
    public void testConstructor() {
        assertNotNull(new NutritionOrder.NutritionOrderAdministration(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(NutritionOrder.NutritionOrderAdministration.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final NutritionOrder.NutritionOrderAdministration x = NutritionOrder.NutritionOrderAdministration.create().build();
        final NutritionOrder.NutritionOrderAdministration y = NutritionOrder.NutritionOrderAdministration.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", NutritionOrder.NutritionOrderAdministration.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, NutritionOrder.NutritionOrderAdministration.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, NutritionOrder.NutritionOrderAdministration.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testSchedule() {
        final Timing value = Timing.create().build();
        assertEquals(value, NutritionOrder.NutritionOrderAdministration.create().schedule(value).build().schedule());
    }

    @Test
    public void testQuantity() {
        final Quantity value = Quantity.create().build();
        assertEquals(value, NutritionOrder.NutritionOrderAdministration.create().quantity(value).build().quantity());
    }

    @Test
    public void testRateQuantity() {
        final Quantity value = Quantity.create().build();
        assertEquals(value, NutritionOrder.NutritionOrderAdministration.create().rateQuantity(value).build().rateQuantity());
    }

    @Test
    public void testRateRatio() {
        final Ratio value = Ratio.create().build();
        assertEquals(value, NutritionOrder.NutritionOrderAdministration.create().rateRatio(value).build().rateRatio());
    }
}
