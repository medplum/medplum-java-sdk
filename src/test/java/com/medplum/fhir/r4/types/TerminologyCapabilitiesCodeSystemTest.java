/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class TerminologyCapabilitiesCodeSystemTest {

    @Test
    public void testConstructor() {
        assertNotNull(new TerminologyCapabilities.TerminologyCapabilitiesCodeSystem(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(TerminologyCapabilities.TerminologyCapabilitiesCodeSystem.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final TerminologyCapabilities.TerminologyCapabilitiesCodeSystem x = TerminologyCapabilities.TerminologyCapabilitiesCodeSystem.create().build();
    final TerminologyCapabilities.TerminologyCapabilitiesCodeSystem y =
            TerminologyCapabilities.TerminologyCapabilitiesCodeSystem.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", TerminologyCapabilities.TerminologyCapabilitiesCodeSystem.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, TerminologyCapabilities.TerminologyCapabilitiesCodeSystem.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, TerminologyCapabilities.TerminologyCapabilitiesCodeSystem.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testUri() {
        assertEquals("x", TerminologyCapabilities.TerminologyCapabilitiesCodeSystem.create().uri("x").build().uri());
    }

    @Test
    public void testVersion() {
        final java.util.List<TerminologyCapabilities.TerminologyCapabilitiesVersion> value = java.util.Collections.emptyList();
        assertEquals(value, TerminologyCapabilities.TerminologyCapabilitiesCodeSystem.create().version(value).build().version());
    }

    @Test
    public void testSubsumption() {
        assertEquals(true, TerminologyCapabilities.TerminologyCapabilitiesCodeSystem.create().subsumption(true).build().subsumption());
    }
}
