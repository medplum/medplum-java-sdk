/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class DeviceUdiCarrierTest {

    @Test
    public void testConstructor() {
        assertNotNull(new Device.DeviceUdiCarrier(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(Device.DeviceUdiCarrier.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testCopyAll() {
        final Device.DeviceUdiCarrier x = Device.DeviceUdiCarrier.create().build();
        final Device.DeviceUdiCarrier y = Device.DeviceUdiCarrier.create().copyAll(x).build();
        assertEquals(x, y);
    }

    @Test
    public void testId() {
        assertEquals("x", Device.DeviceUdiCarrier.create().id("x").build().id());
    }

    @Test
    public void testExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Device.DeviceUdiCarrier.create().extension(value).build().extension());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Device.DeviceUdiCarrier.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testDeviceIdentifier() {
        assertEquals("x", Device.DeviceUdiCarrier.create().deviceIdentifier("x").build().deviceIdentifier());
    }

    @Test
    public void testIssuer() {
        final java.net.URI value = java.net.URI.create("https://www.example.com");
        assertEquals(value, Device.DeviceUdiCarrier.create().issuer(value).build().issuer());
    }

    @Test
    public void testJurisdiction() {
        final java.net.URI value = java.net.URI.create("https://www.example.com");
        assertEquals(value, Device.DeviceUdiCarrier.create().jurisdiction(value).build().jurisdiction());
    }

    @Test
    public void testCarrierAIDC() {
        assertEquals("x", Device.DeviceUdiCarrier.create().carrierAIDC("x").build().carrierAIDC());
    }

    @Test
    public void testCarrierHRF() {
        assertEquals("x", Device.DeviceUdiCarrier.create().carrierHRF("x").build().carrierHRF());
    }

    @Test
    public void testEntryType() {
        assertEquals("x", Device.DeviceUdiCarrier.create().entryType("x").build().entryType());
    }
}
